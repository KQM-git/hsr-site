---
export interface Props {
  className?: string;
  width: string;
  height: string;
}

const { className, width, height } = Astro.props;
---

<svg
  class=`${className ?? ""} fill-text`
  width={width}
  height={height}
  viewBox="0 0 100 100"
>
  <g class="stroke-text" stroke-width="2" fill="none">
    <path
      class="line line1"
      d="M 20,29.000046 H 80.000231 C 80.000231,29.000046 94.498839,28.817352 94.532987,66.711331 94.543142,77.980673 90.966081,81.670246 85.259173,81.668997 79.552261,81.667751 75.000211,74.999942 75.000211,74.999942 L 25.000021,25.000058"
    >
    </path>
    <path class="line line2" d="M 20,50 H 80"></path>
    <path
      class="line line3"
      d="M 20,70.999954 H 80.000231 C 80.000231,70.999954 94.498839,71.182648 94.532987,33.288669 94.543142,22.019327 90.966081,18.329754 85.259173,18.331003 79.552261,18.332249 75.000211,25.000058 75.000211,25.000058 L 25.000021,74.999942"
    >
    </path>
  </g>
</svg>

<style>
  .line {
    transition: stroke-dasharray 250ms cubic-bezier(0.4, 0, 0.2, 1),
      stroke-dashoffset 250ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* animated open/close icon, Credits Mikael Ainalem */
  /* https://uxdesign.cc/the-menu-210bec7ad80c */
  .line1 {
    stroke-dasharray: 60 207;
    stroke-width: 6;
  }
  .line2 {
    stroke-dasharray: 60 60;
    stroke-width: 6;
  }
  .line3 {
    stroke-dasharray: 60 207;
    stroke-width: 6;
  }
  :global(button[aria-expanded="true"]) .line1 {
    stroke-dasharray: 90 207;
    stroke-dashoffset: -134;
    stroke-width: 6;
  }
  :global(button[aria-expanded="true"]) .line2 {
    stroke-dasharray: 1 60;
    stroke-dashoffset: -30;
    stroke-width: 6;
  }
  :global(button[aria-expanded="true"]) .line3 {
    stroke-dasharray: 90 207;
    stroke-dashoffset: -134;
    stroke-width: 6;
  }
</style>
