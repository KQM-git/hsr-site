---
/** TODO
 * Rerun script on page resize
 */

import ParsedParams from "components/ParsedParams.astro";
import type { CharacterTrace } from "types/game-data";

export interface Props extends CharacterTrace {
  depth: number;
}
const { id, name, desc, params, icon, minAsc, minLevel, children, depth } =
  Astro.props;

// This is really janky
const major = icon.includes("_");
const dim = major ? "64" : "48";
---

<!-- Remove unnecessary class names -->
<li class=`tree-node depth-${depth} ${major ? "major" : "minor"}`>
  <div id={id.toString()} class="relative flex gap-2 items-start">
    <div class="relative shrink-0">
      <img src={`/img/traces/${icon}`} width={dim} height={dim} alt="" />
      <div
        class="bg-bg bg-opacity-95 text-xs rounded w-min px-1 absolute font-bold tracking-wider bottom-0 left-0 right-0 ml-auto mr-auto z-10"
      >
        {(minAsc && `A${minAsc}`) || (minLevel && `LV${minLevel}`) || "A0"}
      </div>
    </div>
    <div>
      <h2 class={major ? "subsubheader" : "subsubsubheader"}>{name}</h2>
      <p class={major ? "" : "text-sm"}>
        <ParsedParams data={desc} params={params} />
      </p>
    </div>
  </div>
  {
    children && (
      <ol class="">
        {children.map((ch) => (
          <Astro.self {...ch} depth={depth + 1} />
        ))}
      </ol>
    )
  }
</li>

<style>
  li.depth-0.tree-node > div {
    margin-bottom: 16px;
  }
  li:not(.depth-0).tree-node {
    margin-left: 48px;
    margin-bottom: 16px;
  }

  li:not(.depth-0) > div::before {
    content: "";
    position: absolute;
    width: var(--deco-width);
    height: var(--deco-height);
    border-left: 2px solid #aaa;
    border-bottom: 2px solid #aaa;
    right: 100%;
    bottom: 50%;
  }
</style>
