---
/** TODO
 * branch drawing script no longer works
 * make a cleanup pass
 */

/** BREAKPOINTS:
 * MD: Collapse char img inline (info) or hidden (other 3), expand info and tablist to full width
 * XL: Collapse tablist to top of page
 */

import CharInfo from "components/data/characters/CharInfo.astro";
import CharTrace from "components/data/characters/CharTrace.astro";
import Layout from "layouts/Data.astro";
import type { Character } from "types/game-data";
import splitLines from "util/splitLines";
import TabPage from "components/tabpage/TabPage.astro";
import TabContent from "components/tabpage/TabContent.astro";
import CharPortrait from "components/data/characters/CharPortrait.astro";
import { getCharacter } from "components/mdx/CharacterData";
import AbilityDescription from "./AbilityDescription.astro";

export async function getStaticPaths() {
  const chars = (await Astro.glob(
    "/src/data/characters/*.json"
  )) as Character[];

  return chars.map((ch) => ({
    params: { name: ch.name.replaceAll(" ", "_") },
  }));
}

const { name } = Astro.params;
const char = (await getCharacter(name!))!;

const { name: charName, id, description, skills, eidolons, traces } = char;

const cardClass = "rounded-lg p-4 max-w-full md:max-w-sm relative pb-16";
const bgClass = `card-bg-1 bg-opacity-90 max-w-full relative`;

const breadcrumbs = ["Data Bank", "Characters", charName];

const tabLabels = {
  info: "Info",
  skills: "Skills",
  eidolons: "Eidolons",
  traces: "Traces",
};

const skillCategories = {
  talent: "Talent",
  basic: "Basic",
  skill: "Skill", 
  ultimate: "Ultimate",
  technique: "Technique"
};
const skillTypes: { [key: string]: string } = {
  "SingleAttack": "Single Target",
  "AoEAttack": "AoE Attack",
  "Blast": "Blast",
  "Enhance": "Enhance",
  "MazeAttack": "Attack Technique",
  "Maze": "Utility Technique"
};

function getAbilityInfo(abilityType:string, abilityLevel?:number):any {
  const ability = skills.filter((s) => s.type == abilityType);

  return ability[0];
}
---

<Layout
  title={name?.replaceAll("_", " ") ?? "Characters"}
  description=""
  breadcrumbs={breadcrumbs}
>
  <main class="flex items-center flex-col">
    <article class=`card-bg p-4 md:p-8 max-w-4xl relative min-h-[700px]`>
      <TabPage
        names={tabLabels}
        buttonClass="m-2 rounded-2xl z-10"
        headerClass="grid grid-cols-4 md:max-w-sm"
      >
        {
          Object.keys(tabLabels).map((id, inx) => (
            <TabContent id={id}>
              <CharPortrait char={char} big={!!inx} />
            </TabContent>
          ))
        }
        <TabContent
          id="info"
          class="card-bg-1 bg-opacity-90 max-w-full md:max-w-sm relative"
        >
          <CharInfo h1 {...char} />
          <div class="subtitle text-xs font-bold">Introduction</div>
          <div class="mt-1 space-y-1">
            {description && splitLines(description).map((p) => <p>{p}</p>)}
          </div>
        </TabContent>

        <TabContent id="skills" class={cardClass}>
          <CharInfo {...char} />
        </TabContent>
        <TabContent id="skills" class={bgClass}>
          <TabPage
            names={skillCategories}
            buttonClass="m-2 rounded-2xl z-10"
            headerClass="grid grid-cols-5"
          >
            
            <TabContent id="talent">
              
              <h2 class="subsubheader">
                {getAbilityInfo("Talent").name}
              </h2>
              <h3>
                {getAbilityInfo("Talent").effect} <!--SOMETIMES not working?? -->
              </h3>
              <div>
                <AbilityDescription 
                  abilityDesc={getAbilityInfo("Talent").description}, 
                  abilityScaling={JSON.stringify(getAbilityInfo("Talent").params)},
                  abilityMaxLevel={getAbilityInfo("Talent").maxLevel} >
                </AbilityDescription>
              </div>
              
              
            </TabContent>
            <TabContent id="basic">
              testCon2
            </TabContent>
          </TabPage>
        </TabContent>

        <TabContent id="eidolons" class={cardClass}>
          <CharInfo {...char} />
        </TabContent>
        <TabContent id="eidolons" class={bgClass}>
          <ol class="flex flex-col gap-2">
            {
              // can also use e.icon for eidolon image
              eidolons.map((e, i) => (
                <li class="flex gap-2 md:gap-4 items-start">
                  <img
                    src={`/image/character_eidolon/${id}_Rank_${i + 1}.png`}
                    width="120"
                    height="120"
                    class="scale-75 md:scale-100"
                    alt=""
                  />
                  <div>
                    <h2 class="subsubheader">
                      E{i + 1}
                      {e.name}
                    </h2>
                    <div>
                      {splitLines(e.desc).map((line, inx) => (
                        <>
                          {inx !== 0 && <br />}
                          {line}
                        </>
                      ))}
                    </div>
                  </div>
                </li>
              ))
            }
          </ol>
        </TabContent>

        <TabContent id="traces" class={cardClass}>
          <CharInfo {...char} />
        </TabContent>
        <TabContent id="traces" class={bgClass}>
          <ol id="skill-tree" class="flex flex-col gap-4">
            {
              traces
                .sort(
                  (a, b) =>
                    (a.minAsc ?? 0) - (b.minAsc ?? 0) ||
                    (a.minLevel ?? 0) - (b.minLevel ?? 0)
                )
                .map((trace) => <CharTrace {...trace} depth={0} />)
            }
          </ol>
        </TabContent>
      </TabPage>
    </article>
  </main>
</Layout>
